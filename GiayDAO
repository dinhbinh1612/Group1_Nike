package binhpdph44989.group1.group1.dao;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;

import java.util.ArrayList;

import binhpdph44989.group1.group1.database.DbHelper;
import binhpdph44989.group1.group1.model.Giay;

public class GiayDao {
    DbHelper dbhelper;
    public GiayDao(Context context){dbhelper = new DbHelper(context);}

    public ArrayList<Giay>getDSGiay(){
        ArrayList<Giay>list = new ArrayList<>();
        SQLiteDatabase sqLiteDatabase = dbhelper.getReadableDatabase();
        Cursor cursor = sqLiteDatabase.rawQuery("SELECT g.magiay, g.tengiay, g.hinhanh, g.size, g.giaban, g.soluongkho, g.soluong, lo.tenloai FROM GIAY g, LOAIGIAY lo WHERE g.maloai = lo.maloai\n ",null);
        cursor.moveToFirst();
        while (!cursor.isAfterLast()){
            int id = cursor.getInt(0);
            String name = cursor.getString(1);
            String imgName = cursor.getString(2);
            int size = cursor.getInt(3);
            int gia = cursor.getInt(4);
            int soluongkho = cursor.getInt(5);
            int soluong = cursor.getInt(6);
            int maloai = cursor.getInt(7);
            Giay g = new Giay(id,name,imgName,size,gia,soluongkho,soluong,maloai);
            list.add(g);
            cursor.moveToNext();
        }
        cursor.close();
        return list;
    }
    public boolean capNhatGiay(Giay giay) {
        SQLiteDatabase db = dbhelper.getWritableDatabase();
        ContentValues values = new ContentValues();
        values.put("tengiay", giay.getTengiay());
        values.put("hinhanh", giay.getHinhanh());
        values.put("giaban", giay.getGiaban());
        values.put("soluong", giay.getSoluong());
        values.put("soluongkho", giay.getSoluongkho());
        values.put("size", giay.getSize());

        // Xác định điều kiện WHERE cho câu lệnh UPDATE
        String selection = "magiay=?";
        String[] selectionArgs = {String.valueOf(giay.getMagiay())};

        // Thực hiện cập nhật dữ liệu vào bảng GIAY
        int rowsAffected = db.update("GIAY", values, selection, selectionArgs);
        db.close();

        // Kiểm tra số dòng bị ảnh hưởng (nếu lớn hơn 0, có nghĩa là đã cập nhật thành công)
        return rowsAffected > 0;
    }
    public boolean themGiay(Giay giay) {
        SQLiteDatabase db = dbhelper.getWritableDatabase();
        ContentValues values = new ContentValues();
        values.put("tengiay", giay.getTengiay());
        values.put("hinhanh", giay.getHinhanh());
        values.put("giaban", giay.getGiaban());
        values.put("soluong", giay.getSoluong());
        values.put("soluongkho", giay.getSoluongkho());
        values.put("size", giay.getSize());

        // Thực hiện thêm dữ liệu vào bảng GIAY
        long result = db.insert("GIAY", null, values);
        db.close();

        // Kiểm tra xem việc thêm dữ liệu có thành công không
        return result != -1;
    }
    public int getMaxMaGiay() {
        SQLiteDatabase db = dbhelper.getReadableDatabase();
        Cursor cursor = db.rawQuery("SELECT MAX(magiay) FROM GIAY", null);
        int maxMaGiay = 0;
        if (cursor.moveToFirst()) {
            maxMaGiay = cursor.getInt(0);
        }
        cursor.close();
        return maxMaGiay;
    }

}
